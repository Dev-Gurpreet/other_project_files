# [program:celeryd]
# command=/var/www/html/products/publicapi/env/bin/celery worker — app=rapaidv2 -l info
# stdout_logfile=/var/www/html/products/publicapi/rapaidv2/celeryd.log
# stderr_logfile=/var/www/html/products/publicapi/rapaidv2/celeryd.log
# autostart=true
# autorestart=true
# startsecs=10
# stopwaitsecs=600
[supervisord]
nodaemon=true
[supervisorctl]
; ================================
;  celery beat supervisor example
; ================================

; the name of your supervisord program
[program:celerysupervisor]

; Set full path to celery program if using virtualenv
command=/home/webdev/products/document_reader/venv/bin/celery -A app.celery_worker.celery worker --loglevel=INFO --concurrency=3



; The directory to your Django project
directory=/home/webdev/products/document_reader

; If supervisord is run as the root user, switch users to this UNIX user account
; before doing any processing.
user=webdev

; Supervisor will start as many instances of this program as named by numprocs
numprocs=1

; Put process stdout output in this file
stdout_logfile=/home/webdev/products/document_reader/celery_success.log

; Put process stderr output in this file
stderr_logfile=/home/webdev/products/document_reader/celery_error.log

; If true, this program will start automatically when supervisord is started
autostart=true

; May be one of false, unexpected, or true. If false, the process will never
; be autorestarted. If unexpected, the process will be restart when the program
; exits with an exit code that is not one of the exit codes associated with this
; process’ configuration (see exitcodes). If true, the process will be
; unconditionally restarted when it exits, without regard to its exit code.
autorestart=true

; The total number of seconds which the program needs to stay running after
; a startup to consider the start successful.
startsecs=0

startretries=10

; if your broker is supervised, set its priority higher
; so it starts first
priority=999

# [unix_http_server]
# file=/var/run/supervisor.sock
# chmod=0700

# [rpcinterface:supervisor]
# supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

# [supervisorctl]
# serverurl=unix:///var/run/supervisor.sock

